#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define error(x) 	cerr<<#x<<" "<<x<<endl;
#define all(x)			(x).begin(),(x).end()
#define Sort(x)			sort(all(x))
#define For(y , x)      for(int y=0 ; y<x ; y++)
using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef string str;
const int MAX=1e5 + 10;
const ll MODE = (ll)1e9 + 7;
const ll INF = (ll)1e18 + 7;
vector <int> ve;
vector<int> v;
ll ans=INF;
ll n;
ll res;
int id[MAX], nodes, edges;
pair <long long, pair<int, int> > p[MAX];

int backEdge[MAXN], h[MAXN], mark[MAXN], cut[MAXN];
vector<pii> adj[MAXN];

void dfs(int x, int par, int len) {
	mark[x] = true, backEdge[x] = 1e9, h[x] = len;

	for (int i = 0; i < SZ(adj[x]); i ++) {
		int v = adj[x][i].X, idx = adj[x][i].Y;
		if (mark[v] && v != par) backEdge[x] = min(backEdge[x], h[v]);
		else if (!mark[v]) {
			dfs(v, x, len + 1);
			int tmp = backEdge[v];
			if (tmp > h[x]) cut[idx] = true;
			backEdge[x] = min(backEdge[x], tmp);
		}
	}
}
int main(){
    
}
